{"version":3,"sources":["api.ts","types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/LoadingError/LoadingError.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_headers$get","response","ok","status","statusText","headers","wrap","_context","prev","next","fetch","sent","Error","concat","includes","abrupt","json","stop","getUser","userId","FilterBy","TodoList","_ref","todos","onTodoSelect","selectedTodo","_jsxs","className","children","_jsx","map","todo","id","title","completed","isSelectedTodo","classNames","type","onClick","filterByOptions","Object","values","filterByOptionsNames","reduce","names","filterByOption","name","split","toUpperCase","slice","_objectSpread","_defineProperty","TodoFilter","query","filterBy","onQueryChange","onFilterChange","value","onChange","event","currentTarget","selected","placeholder","style","pointerEvents","Loader","LoadingError","TodoModal","onClose","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","hasLoadingError","setHasLoadingError","loadUserInfo","_ref2","userID","loadedUser","t0","finish","_x","apply","arguments","useEffect","href","email","_Fragment","App","setTodos","_useState7","_useState8","setSelectedTodo","_useState9","_useState10","setQuery","_useState11","All","_useState12","setFilterBy","loadTodos","todosFromServer","visibleTodos","useMemo","filteredTodos","_toConsumableArray","filter","toLocaleLowerCase","Completed","Active","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.742496c9.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(async () => {\n      const response = await fetch(fullURL);\n      const {\n        ok,\n        status,\n        statusText,\n        headers,\n      } = response;\n\n      if (!ok) {\n        throw new Error(`${status} - ${statusText}`);\n      }\n\n      if (!headers.get('content-type')?.includes('application/json')) {\n        throw new Error('Content-type is not supported');\n      }\n\n      return response.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onTodoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n        const isSelectedTodo = todo === selectedTodo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {id}\n            </td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      { 'fa-eye': !isSelectedTodo },\n                      { 'fa-eye-slash': isSelectedTodo },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nimport { FilterBy } from '../../types/FilterBy';\nimport { FilterByOptionsNames } from '../../types/FilterByOptions';\n\nconst filterByOptions = Object.values(FilterBy);\n\nconst filterByOptionsNames: FilterByOptionsNames = filterByOptions.reduce(\n  (names, filterByOption) => {\n    const filterByOptionSplit = filterByOption.split('');\n    const nameFirstLetterUpperCased = filterByOptionSplit[0].toUpperCase();\n    const nameRemainingPart = filterByOption.slice(1);\n    const name = nameFirstLetterUpperCased + nameRemainingPart;\n\n    return {\n      ...names,\n      [filterByOption]: name,\n    };\n  },\n  {} as FilterByOptionsNames,\n);\n\ntype Props = {\n  query: string;\n  filterBy: string;\n  onQueryChange: (newQuery: string) => void;\n  onFilterChange: (newFilterBy: FilterBy) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filterBy,\n  onQueryChange,\n  onFilterChange,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilterChange(event.currentTarget.value as FilterBy);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.currentTarget.value);\n  };\n\n  const handleQueryReset = () => {\n    onQueryChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleFilterChange}\n          >\n            {filterByOptions.map(filterByOption => (\n              <option\n                value={filterByOption}\n                selected={filterBy === filterByOption}\n              >\n                {filterByOptionsNames[filterByOption]}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"Reset\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\n\nexport const LoadingError: React.FC = () => (\n  <div className=\"notification is-danger is-light\">\n    An error occured while loading!\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { LoadingError } from '../LoadingError/LoadingError';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const loadUserInfo = async (userID: number) => {\n    setIsLoading(true);\n\n    try {\n      const loadedUser = await getUser(userID);\n\n      setUser(loadedUser);\n    } catch (error) {\n      setHasLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUserInfo(userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames(\n                  { 'has-text-success': completed },\n                  { 'has-text-danger': !completed },\n                )}\n              >\n                {completed\n                  ? (\n                    'Done'\n                  )\n                  : (\n                    'Planned'\n                  )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n\n      {hasLoadingError && (\n        <>\n          <LoadingError />\n\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={onClose}\n          >\n            Close\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useMemo, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { LoadingError } from './components/LoadingError/LoadingError';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState(FilterBy.All);\n\n  const loadTodos = async () => {\n    setIsLoading(true);\n\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    } catch (error) {\n      setHasLoadingError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = [...todos];\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => (\n        todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n      ));\n    }\n\n    switch (filterBy) {\n      case FilterBy.Completed:\n        filteredTodos = filteredTodos.filter(todo => (\n          todo.completed\n        ));\n        break;\n\n      case FilterBy.Active:\n        filteredTodos = filteredTodos.filter(todo => (\n          !todo.completed\n        ));\n        break;\n\n      default:\n        break;\n    }\n\n    return filteredTodos;\n  }, [query, filterBy, isLoading]);\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalCloseButtonClick = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filterBy={filterBy}\n                onFilterChange={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <>\n                    {visibleTodos.length > 0\n                      ? (\n                        <TodoList\n                          todos={visibleTodos}\n                          onTodoSelect={handleTodoSelect}\n                          selectedTodo={selectedTodo}\n                        />\n                      )\n                      : (\n                        <p>\n                          No todos found\n                        </p>\n                      )}\n\n                    {hasLoadingError && (\n                      <LoadingError />\n                    )}\n                  </>\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={handleModalCloseButtonClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}